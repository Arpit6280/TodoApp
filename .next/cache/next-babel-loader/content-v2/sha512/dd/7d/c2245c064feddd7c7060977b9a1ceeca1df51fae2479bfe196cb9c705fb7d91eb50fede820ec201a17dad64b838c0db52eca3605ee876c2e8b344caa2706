{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\arpit\\\\Documents\\\\todoApp\\\\todo\\\\pages\\\\index.js\";\nimport Head from \"next/head\";\nimport TaskForm from \"../components/TaskForm\";\nimport TodayTask from \"../components/TodayTask\";\nimport { MongoClient } from \"mongodb\"; // import styles from '../styles/Home.module.css'\n\nfunction Home(props) {\n  const onAddTask = async task => {// console.log(task);\n    // const response = await fetch(\"/api/complete-todo\", {\n    //   method: \"PUT\",\n    //   body: JSON.stringify(task),\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TodayTask, {\n      tasks: props.tasks,\n      onAddTask: onAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\"mongodb+srv://arpitsinghyadav19:Arpit6280@cluster0.ukwpzd9.mongodb.net/test?retryWrites=true&w=majority\");\n  const db = client.db();\n  const todoCollection = db.collection(\"todo\");\n  const todos = await todoCollection.find().toArray();\n  client.close();\n  console.log(todos);\n  return {\n    props: {\n      tasks: todos.map(todo => ({\n        name: todo.name,\n        description: todo.description,\n        id: todo._id.toString()\n      }))\n    }\n  };\n}\nexport default Home;","map":{"version":3,"sources":["C:/Users/arpit/Documents/todoApp/todo/pages/index.js"],"names":["Head","TaskForm","TodayTask","MongoClient","Home","props","onAddTask","task","tasks","getStaticProps","client","connect","db","todoCollection","collection","todos","find","toArray","close","console","log","map","todo","name","description","id","_id","toString"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CACA;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAMC,SAAS,GAAG,MAAOC,IAAP,IAAgB,CAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GATD;;AAUA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEF,KAAK,CAACG,KAAxB;AAA+B,MAAA,SAAS,EAAEF;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AAED,OAAO,eAAeG,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,yGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,cAAc,GAAGD,EAAE,CAACE,UAAH,CAAc,MAAd,CAAvB;AACA,QAAMC,KAAK,GAAG,MAAMF,cAAc,CAACG,IAAf,GAAsBC,OAAtB,EAApB;AACAP,EAAAA,MAAM,CAACQ,KAAP;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLG,MAAAA,KAAK,EAAEO,KAAK,CAACM,GAAN,CAAWC,IAAD,KAAW;AAC1BC,QAAAA,IAAI,EAAED,IAAI,CAACC,IADe;AAE1BC,QAAAA,WAAW,EAAEF,IAAI,CAACE,WAFQ;AAG1BC,QAAAA,EAAE,EAAEH,IAAI,CAACI,GAAL,CAASC,QAAT;AAHsB,OAAX,CAAV;AADF;AADF,GAAP;AASD;AAED,eAAevB,IAAf","sourcesContent":["import Head from \"next/head\";\nimport TaskForm from \"../components/TaskForm\";\nimport TodayTask from \"../components/TodayTask\";\nimport { MongoClient } from \"mongodb\";\n// import styles from '../styles/Home.module.css'\n\nfunction Home(props) {\n  const onAddTask = async (task) => {\n    // console.log(task);\n    // const response = await fetch(\"/api/complete-todo\", {\n    //   method: \"PUT\",\n    //   body: JSON.stringify(task),\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    // });\n  };\n  return (\n    <div>\n      <TodayTask tasks={props.tasks} onAddTask={onAddTask} />\n    </div>\n  );\n}\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://arpitsinghyadav19:Arpit6280@cluster0.ukwpzd9.mongodb.net/test?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n  const todoCollection = db.collection(\"todo\");\n  const todos = await todoCollection.find().toArray();\n  client.close();\n  console.log(todos);\n\n  return {\n    props: {\n      tasks: todos.map((todo) => ({\n        name: todo.name,\n        description: todo.description,\n        id: todo._id.toString(),\n      })),\n    },\n  };\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}