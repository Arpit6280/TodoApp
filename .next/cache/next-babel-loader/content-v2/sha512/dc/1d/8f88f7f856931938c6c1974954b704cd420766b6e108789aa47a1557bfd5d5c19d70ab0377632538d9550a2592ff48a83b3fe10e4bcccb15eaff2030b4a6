{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\arpit\\\\Documents\\\\todoApp\\\\todo\\\\pages\\\\index.js\";\nimport Head from \"next/head\";\nimport TaskForm from \"../components/TaskForm\";\nimport TodayTask from \"../components/TodayTask\";\nimport { MongoClient } from \"mongodb\"; // import styles from '../styles/Home.module.css'\n\nfunction Home(props) {\n  const onAddTask = async task => {\n    console.log(task);\n    const response = await fetch(\"/api/complete-todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(task),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  };\n\n  const onDeleteTask = async name => {\n    console.log(name); // const response = await fetch(\"/api/delete-todo\", {\n    //   method: \"DELETE\",\n    //   body: JSON.stringify(name),\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TodayTask, {\n      tasks: props.tasks,\n      onAddTask: onAddTask,\n      onDeleteTask: onDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\"mongodb+srv://arpitsinghyadav19:Arpit6280@cluster0.ukwpzd9.mongodb.net/test?retryWrites=true&w=majority\");\n  const db = client.db();\n  const todoCollection = db.collection(\"todo\");\n  const todos = await todoCollection.find().toArray();\n  client.close();\n  console.log(todos);\n  return {\n    props: {\n      tasks: todos.map(todo => ({\n        name: todo.name,\n        description: todo.description,\n        id: todo._id.toString(),\n        completed: todo.completed\n      }))\n    }\n  };\n}\nexport default Home;","map":{"version":3,"sources":["C:/Users/arpit/Documents/todoApp/todo/pages/index.js"],"names":["Head","TaskForm","TodayTask","MongoClient","Home","props","onAddTask","task","console","log","response","fetch","method","body","JSON","stringify","headers","onDeleteTask","name","tasks","getStaticProps","client","connect","db","todoCollection","collection","todos","find","toArray","close","map","todo","description","id","_id","toString","completed"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CACA;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAMC,SAAS,GAAG,MAAOC,IAAP,IAAgB;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAD,EAAuB;AACjDC,MAAAA,MAAM,EAAE,KADyC;AAEjDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAF2C;AAGjDS,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHwC,KAAvB,CAA5B;AAOD,GATD;;AAUA,QAAMC,YAAY,GAAG,MAAOC,IAAP,IAAgB;AACnCV,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ,EADmC,CAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GATD;;AAUA,sBACE;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,KAAK,EAAEb,KAAK,CAACc,KADf;AAEE,MAAA,SAAS,EAAEb,SAFb;AAGE,MAAA,YAAY,EAAEW;AAHhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;AAED,OAAO,eAAeG,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMlB,WAAW,CAACmB,OAAZ,CACnB,yGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,cAAc,GAAGD,EAAE,CAACE,UAAH,CAAc,MAAd,CAAvB;AACA,QAAMC,KAAK,GAAG,MAAMF,cAAc,CAACG,IAAf,GAAsBC,OAAtB,EAApB;AACAP,EAAAA,MAAM,CAACQ,KAAP;AACArB,EAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AAEA,SAAO;AACLrB,IAAAA,KAAK,EAAE;AACLc,MAAAA,KAAK,EAAEO,KAAK,CAACI,GAAN,CAAWC,IAAD,KAAW;AAC1Bb,QAAAA,IAAI,EAAEa,IAAI,CAACb,IADe;AAE1Bc,QAAAA,WAAW,EAAED,IAAI,CAACC,WAFQ;AAG1BC,QAAAA,EAAE,EAAEF,IAAI,CAACG,GAAL,CAASC,QAAT,EAHsB;AAI1BC,QAAAA,SAAS,EAAEL,IAAI,CAACK;AAJU,OAAX,CAAV;AADF;AADF,GAAP;AAUD;AAED,eAAehC,IAAf","sourcesContent":["import Head from \"next/head\";\nimport TaskForm from \"../components/TaskForm\";\nimport TodayTask from \"../components/TodayTask\";\nimport { MongoClient } from \"mongodb\";\n// import styles from '../styles/Home.module.css'\n\nfunction Home(props) {\n  const onAddTask = async (task) => {\n    console.log(task);\n    const response = await fetch(\"/api/complete-todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(task),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n  const onDeleteTask = async (name) => {\n    console.log(name);\n    // const response = await fetch(\"/api/delete-todo\", {\n    //   method: \"DELETE\",\n    //   body: JSON.stringify(name),\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    // });\n  };\n  return (\n    <div>\n      <TodayTask\n        tasks={props.tasks}\n        onAddTask={onAddTask}\n        onDeleteTask={onDeleteTask}\n      />\n    </div>\n  );\n}\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://arpitsinghyadav19:Arpit6280@cluster0.ukwpzd9.mongodb.net/test?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n  const todoCollection = db.collection(\"todo\");\n  const todos = await todoCollection.find().toArray();\n  client.close();\n  console.log(todos);\n\n  return {\n    props: {\n      tasks: todos.map((todo) => ({\n        name: todo.name,\n        description: todo.description,\n        id: todo._id.toString(),\n        completed: todo.completed,\n      })),\n    },\n  };\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}